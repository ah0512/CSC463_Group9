/* 
   Project 3 - Fuzzy Logic
   Andrew Mueller & Austin Hamman
   CSC 463 - Dr. Girard
*/

int LEFT_MOTOR = 0;
int RIGHT_MOTOR = 2;
int LEFT_SENSOR = 5;
int RIGHT_SENSOR = 6;  

//FUZZY VALUES:
float NB = -60.0; //-60
float NS = -30.0; //-30
float NCZ = -15.0; //-10
float PCZ = 15.0; // 10
float PS = 30.0; //30
float PB = 60.0; //60

//MOTOR FUZZY INPUT
float lVeryLow;
float lLow;
float lHigh;
float lVeryHigh;

float rVeryLow;
float rLow;
float rHigh;
float rVeryHigh;

//MOTOR MOD VALUE
float VH = 75.0;
float H = 50.0;
float L = 25.0;
float VL = 0.0;

//MOTOR CRISP OUTPUT
int rightMotor;
int leftMotor;

void forward(){
    fd(LEFT_MOTOR);
    fd(RIGHT_MOTOR);
}

void stop(){
    off(LEFT_MOTOR);
    off(RIGHT_MOTOR);
}

//read sensor by subtracting left sensor from right sensor
float readSensor(){                  
    float sensor = (float)(analog(LEFT_SENSOR) - analog(RIGHT_SENSOR));              //subtract left sensor from right sensor
    printf("sensor = %f\n", sensor);
    sleep(0.25);
    return sensor;                                                                   //return sensor value
}

//Receive crisp sensor input and fuzzify it by setting all the fuzzy output values
void fuzzify(float sensor){
    lVeryLow = 0.0;
    lLow = 0.0;
    lHigh = 0.0;
    lVeryHigh = 0.0;
    
    rVeryLow = 0.0;
    rLow = 0.0;
    rHigh = 0.0;
    rVeryHigh = 0.0;
    
    if(sensor <= NB) //-60 to - infinite                   //if sensor reading is less than -60, set values to turn hard right
      {
        lVeryHigh = 1.35;                                 
        rVeryLow = 1.35;
    }else if (sensor > NB && sensor < NS)//-60 to -30      //if sensor reading is between -60 and -30, set values to turn right
      {
        lVeryHigh = 1.0;
        rVeryLow = 1.0;
    }else if(sensor >= NS && sensor < NCZ)//-30 to -10    //if sensor reading is between -30 and -10, set values to turn soft left 
      {
        rHigh = 0.85;
        lLow = 0.85;
    }else if(sensor >= NCZ && sensor <= PCZ)// -10 to 10 //if sensor reading is between -10 and 10, set values to go straight
      {
        rVeryHigh = 0.70;
        lVeryHigh = 0.70;
    }else if(sensor > PCZ && sensor <= PS)//10 to 30    //if sensor reading is between 10 and 30, set values to turn soft right
      {
        rLow = 0.85;
        lHigh = 0.85;
    }else if(sensor > PS && sensor < PB)// 30 to 60     //if sensor reading is between 30 and 60, set values to turnleft
      {
        rVeryHigh = 1.0;
        lVeryLow = 1.0;
    }else if(sensor >= PB) // 60 to infinite            //if sensor is 60 or greater, set values to turn hard left
      {
        rVeryHigh = 1.35;
        lVeryLow = 1.35;
    }
}

//use fuzzy motor values and set to a crisp output
//sets motor speed to the crisp outputs
void setMotorSpeed(){
    lVeryLow *= VL;                                         //multiply lVeryLow by 0
    lLow *= L;                                              //multiply lLow by 25
    lHigh *= H;                                             //multiply lHigh by 50
    lVeryHigh *= VH;                                        //multiply lVeryHigh by 75
    
    rVeryLow *= VL;                                         //multiply rVeryLow by 0
    rLow *= L;                                              //multiply rLow by 25
    rHigh *= H;                                             //multiply rHigh by 50
    rVeryHigh *= VH;                                        //multiply rVeryHigh by 75
    
    leftMotor = (int)(lVeryLow + lLow + lHigh + lVeryHigh);   //add values of all left values to get speed of left motor
    rightMotor = (int)(rVeryLow + rLow + rHigh + rVeryHigh);  //add values of all right values to get speed of right motor
    
    printf("Left: %d, Right: %d\n", leftMotor, rightMotor); 
    sleep(0.25);
    motor(LEFT_MOTOR, leftMotor);                             //set left motor to the leftMotor speed
    motor(RIGHT_MOTOR, rightMotor);                           //set right motor to the rightMotor speed
}

void main() {
    float count = 0.0;
    while(1){
        count = readSensor();
        fuzzify(count);
        setMotorSpeed();
    }
}


