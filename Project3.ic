/* 
   Project 3 - Fuzzy Logic
   Andrew Mueller & Austin Hamman
   CSC 463 - Dr. Girard
*/

int LEFT_MOTOR = 0;
int RIGHT_MOTOR = 2;
int LEFT_SENSOR = 6;
int RIGHT_SENSOR = 15;  
int time = 0;
int LINE = 100;
int turn = 0;

//FUZZY VALUES:
int NB = 0; //-75
int NS = 0; //-25
int N = 0;  //0
int PS = 0; //25
int PB = 0; //75

//MOTOR FUZZY
float rMotor;
float lMotor;

void forward(){
    fd(LEFT_MOTOR);
    fd(RIGHT_MOTOR);
}

void stop(){
    off(LEFT_MOTOR);
    off(RIGHT_MOTOR);
}

int readSensors(){
    int sensor = analog(RIGHT_SENSOR) - analog(LEFT_SENSOR);
    return sensor;
}

void fuzzify(int sensor){
    if(sensor <= NB){
         lVeryHigh = 1.0;
         rVeryLow = 1.0;
    }else if (sensor > NB && sensor <= ((NS+NB)/2)){
        rVeryHigh = sensor/(PB+PS);
        rHigh = 1.0 - rVeryHigh;
        lHigh = sensor/(PB+PS);
        lLow = 1.0 - lHigh;
    }else if (sensor > ((NS+NB)/2) && sensor < NS);{
         rHigh = sensor/(PB+PS);
         rVeryHigh = 1.0 - rHigh;
         lLow = sensor/(PB+PS);
         lVeryLow = 1.0 - lLow;
    }else if(sensor >= NS && sensor > N){
         rHigh = 1.0;
         lLow = 1.0;
    }else if(sensor == N){
        rVeryHigh = 1.0;
        lVeryHigh = 1.0;
    }else if(sensor > N && sensor <= PS){
        rLow = 1.0;
        lHigh = 1.0;
    }else if(sensor > PS && sensor < ((PB+PS)/2)){
        lHigh = sensor/(PB+PS);
        lVeryHigh = 1.0-lHigh;
        rLow = sensor/(PB+PS);
        rVeryLow = 1.0 - rLow;
    }else if(sensor > ((PB+PS)/2)/2) && sensor < PB){
        lVeryHigh = sensor/(PB+PS);
        lHigh = 1.0 - lVeryHigh;
        rVeryLow = sensor/(PB+PS);
        rLow = 1.0 - rVeryLow;
    }else if(sensor >= PB){
         rVeryHigh = 1.0;
         lVeryLow = 1.0;
    }
}

void setMotorSpeed(){
   lVeryLow *= VL;
   lLow *= L;
   lHigh *= H;
   lVeryHigh *= VH;
   
   rVeryLow *= VH;
   rLow *= L
   rHigh *= H;
   rVeryHigh *= VH;
   
   leftMotor = lVeryLow + lLow + lHigh + lVeryHigh;
   rightMotor = rVeryLow + rLow + rHigh + rVeryHigh;
   
   motor(LEFT_MOTOR, leftMotor);
   motor(RIGHT_MOTOR, rightMotor);
}

void main() {
    while(1){
        forward();
        
        
    }
      
      
}
