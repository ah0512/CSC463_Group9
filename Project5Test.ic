/* 
   Project 5 - Maze Following with Sersa
   Andrew Mueller & Austin Hamman
   CSC 463 - Dr. Girard
*/

int LEFT_MOTOR = 0; //Left Motor port
int RIGHT_MOTOR = 2; //Right Motor port
int leftTouch = 14;  //Left Touch sensor port
int rightTouch = 15; // Right touch sensor port
int frontTouch = 7;  // Front touch sensor port
int backTouch = 8;   // Back touch sensor port

int rightMotorPower;
int leftMotorPower;

void forward(int power) {    
   motor(RIGHT_MOTOR, power);    
   motor(LEFT_MOTOR, power);
   rightMotorPower = power;
   leftMotorPower = power;
}

void backward(int power) {
   motor(RIGHT_MOTOR, -power);       
   motor(LEFT_MOTOR, -power);
}

void turnLeft(int power) {
   motor(RIGHT_MOTOR, power);    
   motor(LEFT_MOTOR, -power);
   rightMotorPower = power;
   leftMotorPower = -power;
}

void turnRight(int power) {
   motor(RIGHT_MOTOR, -power);    
   motor(LEFT_MOTOR, power);
   rightMotorPower = -power;
   leftMotorPower = power;
}

void stop() {
   off(RIGHT_MOTOR);
   off(LEFT_MOTOR);
   rightMotorPower = 0;
   leftMotorPower = 0;
}

void actionMoveBack(){
  backward(50);
  sleep(0.50);
}

void actionTurnRight(){
  turnRight(80);
  sleep(0.5);
}

void actionTurnLeft(){
  turnLeft(80);
  sleep(0.5);
}

void actionMoveForward(){
  forward(60);
  sleep(0.1);
}

void actionTurnHardRight(){
  turnRight(80);
  sleep(2.0);
}

void actionTurnHardLeft(){
  turnLeft(80);
  sleep(2.0);
}

//action values

float moveBack = 0.0;
float moveRight = 0.0;
float moveLeft = 0.0;
float moveHardRight = 0.0;
float moveHardLeft = 0.0;

float actionArray[] = {0.0};//moveBack, moveRight, moveLeft, moveHardRight, moveHardLeft};

float moveForward = actionArray[0];

int chooseAction()
{
   int action = 0;
   float reward = 0.0;
   int i;
   for(i = 0; i < 6; i++){
      if (actionArray[i] >= reward){
         reward = actionArray[i];
         action = i;
      }
   }
   
   return action;
}

void runAction(int action){
   if (action == 0)
      actionMoveForward();
   if (action == 1)
      actionMoveBack();
   if (action == 2)
      actionTurnRight();
   if (action == 3)
      actionTurnLeft();
   if (action == 4)
      actionTurnHardRight();
   if (action == 5)
      actionTurnHardLeft();
}

int rewardForward(){
   if ((rightMotorPower == leftMotorPower) && (rightMotorPower != 0))
      return 1;
   else
      return 0;
}

int rewardStopped(){
   if (rightMotorPower == 0 && leftMotorPower == 0)
      return 1;
   else
      return 0;
}

int rewardHitWall(){
   if (digital(frontTouch)){
      return 1;
   }else if (digital(backTouch)){
      return 1;
   }else if(digital(leftTouch)){
      return 1;
   }else if (digital(rightTouch)){
      return 1;
   }else
      return 0;
}

int rewardTurning(){
   if(rightMotorPower != leftMotorPower)
      return 1;
   else 
      return 0;
}

void reward(int action){
   float reward; 
   if(rewardForward()){
      reward = 0.1;
   }else if(rewardStopped()){
      reward = -0.1;
   }else if(rewardHitWall()){
      reward = -1.0;
   }else if(rewardTurning()){
      reward = -0.0001;
   }else if(!rewardHitWall()){
      reward = 1.0;
   }
   actionArray[action] += reward;
}

void main()
{
   int action;
   while(1){
      action = chooseAction();
      runAction(action);
      reward(action);
   }   
}
