/*
* Project Two - Maze with Touch Sensor
* Austin Hamman & Andrew Mueller
* CSC 463 - Dr. Girard
*/

int LEFT_MOTOR = 0;
int RIGHT_MOTOR = 2;
int LEFT_TOUCH = 7;
int RIGHT_TOUCH = 15;
int recent = 0;
int time = 0;

void forward() {
    motor(0, 70);
    motor(2,70);
}

void backward() {
    bk(LEFT_MOTOR);
    bk(RIGHT_MOTOR);
}

void stop() {
    off(LEFT_MOTOR);
    off(RIGHT_MOTOR);
}

void left() {
    bk(LEFT_MOTOR);
    fd(RIGHT_MOTOR);
}

void right() {
    fd(LEFT_MOTOR);
    bk(RIGHT_MOTOR);
}

void forwardMotor(int power){
    motor(RIGHT_MOTOR, power);
    motor(LEFT_MOTOR, power);
}

void backwardMotor(int power){
    motor(RIGHT_MOTOR, -power);
    motor(LEFT_MOTOR, -power);
}

void turnLeftMotor(int power){
    motor(RIGHT_MOTOR, power);
    motor(LEFT_MOTOR, -power);
}

void turnRightMotor(int power){
    motor(RIGHT_MOTOR, -power);
    motor(LEFT_MOTOR, power);   
}

void turnBack() {
    int i;
    backwardMotor(75);
    sleep(0.75);
    for(i = 0; i < 20; i++){
        motor(0, 100);
        sleep(0.1);
    }
    recent++;
}

void turnCheck() {
    printf("Check for Wall\n");
    backwardMotor(75);
    sleep(0.25);
    stop();
    for(time = 0; time < 18; time++) {
        int i;
        fd(RIGHT_MOTOR);
        sleep(0.2);
        if(digital(LEFT_TOUCH)) {
            bk(0);
            bk(2);
            sleep(0.25);
            for(i = 0; i < 14; i++){
                fd(LEFT_MOTOR);
                sleep(0.2);
            }
            stop(); 
            break;
        }
    }   
}

void main () {
    while(1) {
        printf("Recent = %d\n", recent);
        sleep(0.1);
        forward();
        if(digital(RIGHT_TOUCH) && digital(LEFT_TOUCH)) {
            if(recent > 0) {
                turnCheck();
            } else {
                turnBack();
            }
        }else if(digital(RIGHT_TOUCH)){
            stop();
            backwardMotor(60);
            sleep(0.2);
            stop();
            motor(LEFT_MOTOR, 100);
            sleep(0.3);
        }else if(digital(LEFT_TOUCH)){
            turnCheck();
        }
    }
}
