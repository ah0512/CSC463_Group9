/* 
   Project 4 - Maze Following with Fusion
   Andrew Mueller & Austin Hamman
   CSC 463 - Dr. Girard
*/

int LEFT_MOTOR = 0;
int RIGHT_MOTOR = 2;
int REFLECTIVE_RIGHT = 6;
int REFLECTIVE_FRONT = 5;
int LIGHT_FRONT = 3;
int LIGHT_LEFT = 2;
int time = 0;
int count = 0;
int WALL = 210;
int SOURCE = 190;

void forward(int power) {    
    motor(RIGHT_MOTOR, power);    
    motor(LEFT_MOTOR, power);
}

void backward(int power) {
    motor(RIGHT_MOTOR, -power);       
    motor(LEFT_MOTOR, -power);
}

void turnLeft(int power) {
    motor(RIGHT_MOTOR, power);    
    motor(LEFT_MOTOR, -power);
}

void turnRight(int power) {
    motor(RIGHT_MOTOR, -power);    
    motor(LEFT_MOTOR, power);   
}

void stop() {
    off(RIGHT_MOTOR);
    off(LEFT_MOTOR);
}

void checkWall() {
    printf("Check Wall\n");
    turnLeft(80);
    sleep(2.25);
    count++;
}

void checkCorner() {
    printf("Check Corner\n");
    for( time = 0; time < 20; time++) {
        turnRight(80);
        sleep(0.05);
        if(analog(REFLECTIVE_RIGHT) < WALL) {
            turnLeft(80);
            sleep(1.0);
            break;
        }
    }
    turnLeft(80);
    sleep(1.0);
}

void checkLight() {
    printf("Check Light\n");
    forward(50);
    sleep(1.0);
    while((analog(LIGHT_LEFT) < SOURCE) || (analog(LIGHT_FRONT) < SOURCE)) {
        turnLeft(80);
        if(analog(LIGHT_FRONT) < SOURCE) {
            forward(70);
            sleep(0.1);
        }
    }
}

void main() { 
    while(1) {
        printf("Sensor: R%d L%d\n", analog(REFLECTIVE_FRONT), analog(LIGHT_LEFT));
        forward(50);
        sleep(0.1);
        if((analog(REFLECTIVE_FRONT) < WALL) && (analog(LIGHT_LEFT) > SOURCE)) {
            backward(40);
            sleep(0.25);
            stop();
            sleep(0.1);
            if(count < 1) {
                checkWall();
            }else{
                checkCorner();
            }
            checkLight();
        }
    }
}
